<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0" />
  <title><%= user.username %>'s Profile</title>
  <style>
    body {
      font-family: Arial, sans-serif;
      background-color: #fafafa;
      margin: 0;
      padding: 20px;
    }

    .profile-header {
      display: flex;
      align-items: center;
      gap: 30px;
      padding: 20px 0;
      border-bottom: 1px solid #dbdbdb;
      flex-wrap: wrap;
    }

    .profile-image img {
      width: 140px;
      height: 140px;
      object-fit: cover;
      border-radius: 50%;
      border: 2px solid #dbdbdb;
    }

    .profile-info {
      flex: 1;
      min-width: 200px;
    }

    .profile-info h1 {
      font-size: 26px;
      margin-bottom: 8px;
    }

    .profile-info .email {
      color: #777;
      margin-bottom: 10px;
    }

    .profile-stats {
      display: flex;
      gap: 20px;
      font-size: 16px;
      margin-bottom: 12px;
      flex-wrap: wrap;
    }

    .profile-stats span strong {
      font-weight: 600;
      margin-right: 4px;
    }

    .bio {
      font-size: 14px;
      color: #333;
    }

    .profile-btn {
      background-color: #0095f6;
      color: white;
      border: none;
      padding: 8px 18px;
      font-size: 14px;
      border-radius: 4px;
      cursor: pointer;
      margin-top: 10px;
      transition: background-color 0.3s ease;
    }

    .profile-btn:hover {
      background-color: #007acc;
    }

    .posts-grid {
      display: grid;
      grid-template-columns: repeat(auto-fill, minmax(250px, 1fr));
      gap: 20px;
      margin-top: 30px;
    }

    .post {
      background: #fff;
      border: 1px solid #dbdbdb;
      border-radius: 5px;
      overflow: hidden;
    }

    .post img {
      width: 100%;
      height: auto;
      display: block;
    }

    .post p {
      padding: 10px;
      font-size: 14px;
      color: #333;
    }

    /* Responsive for mobile */
    @media (max-width: 600px) {
      .profile-header {
        flex-direction: column;
        align-items: flex-start;
        gap: 20px;
      }

      .profile-image img {
        width: 100px;
        height: 100px;
      }

      .profile-info h1 {
        font-size: 22px;
      }

      .profile-stats {
        gap: 12px;
        font-size: 14px;
      }

      .profile-btn {
        width: 100%;
        text-align: center;
        padding: 10px;
        font-size: 15px;
      }

      .posts-grid {
        grid-template-columns: repeat(auto-fill, minmax(150px, 1fr));
        gap: 12px;
      }

      .post p {
        font-size: 13px;
        padding: 8px;
      }
    }

    /* Modal Styles */
    .modal {
      position: fixed;
      top: 0;
      left: 0;
      width: 100%;
      height: 100%;
      background: rgba(0, 0, 0, 0.5);
      z-index: 10;
      display: none;
      align-items: center;
      justify-content: center;
    }

    .modal-content {
      background: #fff;
      padding: 20px;
      border-radius: 8px;
      width: 90%;
      max-width: 400px;
      max-height: 70vh;
      overflow-y: auto;
    }

    .close {
      float: right;
      cursor: pointer;
      font-size: 20px;
      font-weight: bold;
    }

    .clickable {
      cursor: pointer;
      color: #333;
    }

/* Profile Preview Hover Effect */
.profile-preview {
  display: none;
  position: absolute;
  left: 50%;
  transform: translateX(-50%);
  top: 40px;
  padding: 10px;
  background-color: #fff;
  border-radius: 8px;
  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
  width: 180px;
  z-index: 10;
  opacity: 0;
  transform: translateX(-50%) translateY(10px);
  transition: opacity 0.3s ease, transform 0.3s ease;
}

li:hover .profile-preview {
  display: block;
  opacity: 1;
  transform: translateX(-50%) translateY(0);
}

/* Button Hover Effect */
.profile-btn {
  background-color: #0095f6;
  color: white;
  border: none;
  padding: 8px 18px;
  font-size: 14px;
  border-radius: 4px;
  cursor: pointer;
  margin-top: 10px;
  transition: background-color 0.3s ease, transform 0.2s ease;
}

.profile-btn:hover {
  background-color: #007acc;
  transform: scale(1.05); /* Slight scaling effect on hover */
}

/* Posts Grid Hover Effect */
.post:hover {
  transform: scale(1.02); /* Slight scale effect when hovering over posts */
  box-shadow: 0 4px 10px rgba(0, 0, 0, 0.1);
  transition: transform 0.3s ease, box-shadow 0.3s ease;
}

.post img {
  transition: transform 0.3s ease;
}

.post:hover img {
  transform: scale(1.05); /* Slight zoom effect for the post image */
}

/* Modal Hover Effect */
.modal-content {
  transition: transform 0.3s ease, opacity 0.3s ease;
}

.modal-content:hover {
  transform: translateY(-5px);
  opacity: 0.9;
}


  </style>
</head>
<body>

  <div class="profile-header">
    <a href="/show-user/<%= user._id %>">
      <div class="profile-image">
        <img src="/uploads/<%= user.profilePic || 'default.jpg' %>" 
             alt="Profile Picture" 
             style="width: 120px; height: 120px; border-radius: 50%;">
      </div>
      <span><%= user.username %></span>
    </a>
    

    <div class="profile-info">
      <h1><%= user.username %></h1>
      <p class="email"><%= user.email %></p>
      
      <div class="profile-stats">
        <span><strong><%= posts.length %></strong> posts</span>
        <span class="clickable" onclick="openModal('followers')">
          <strong class="followers-count"><%= user.followers?.length || 0 %></strong> followers
        </span>
        <span class="clickable" onclick="openModal('following')">
          <strong><%= user.following?.length || 0 %></strong> following
        </span>
      </div>

      <% if (user.bio) { %>
        <p class="bio"><%= user.bio %></p>
      <% } %>

      <!-- Follow / Edit Profile Button -->
      <% if (currentUser) { %>
        <% if (isOwnProfile) { %>
          <a href="/edit-profile" class="btn btn-primary">Edit Profile</a>
        <% } else { %>
          <button id="followBtn" class="profile-btn" onclick="toggleFollow('<%= user._id %>')">
            <%= currentUser.following?.some(f => f._id.toString() === user._id.toString()) ? 'Unfollow' : 'Follow' %>
          </button>
        <% } %>
      <% } else { %>
        <button id="followBtn" class="profile-btn" disabled>
          Please log in to follow
        </button>
      <% } %>
    </div>
  </div>

  <h2>Posts:</h2>
  <div class="posts-grid">
    <% posts.forEach(post => { %>
      <div class="post">
        <% if (post.postImage) { %>
          <img src="<%= post.postImage %>" alt="Post" />
        <% } %>
        <p><%= post.caption %></p>
      </div>
    <% }) %>
  </div>

<!-- Followers Modal -->
<div id="followersModal" class="modal" style="display: none;">
  <div class="modal-content">
    <span onclick="closeModal('followersModal')" class="close">&times;</span>
    <h3>Followers</h3>
    <ul style="list-style: none; padding: 0;">
      <% user.followers?.forEach(follower => { %>
        <li style="display: flex; align-items: center; margin-bottom: 10px; position: relative;">
          <!-- Follower Profile Picture -->
          <img src="/uploads/<%= follower.profilePic || '/uploads/1745863270595.jpg' %>" alt="avatar"
               style="width: 30px; height: 30px; border-radius: 50%; margin-right: 10px;">

          <!-- Follower Username -->
          <a href="/show-user/<%= follower._id %>" style="text-decoration: none; color: #333;">
            <%= follower.username %>
          </a>

          <!-- Hover Profile Preview -->
          <div class="profile-preview" style="display: none; position: absolute; left: 50%; transform: translateX(-50%); top: 40px; padding: 10px; background-color: #fff; border-radius: 8px; box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1); width: 180px;">
            <img src="/uploads/<%= follower.profilePic || '/uploads/1745863270595.jpg' %>" alt="avatar" style="width: 40px; height: 40px; border-radius: 50%; margin-right: 10px;">
            <p><strong><%= follower.username %></strong></p>
            <p><%= follower.bio || "No bio available" %></p>
          </div>
        </li>
      <% }) %>
    </ul>
  </div>
</div>


<!-- Following Modal -->
<div id="followingModal" class="modal" style="display: none;">
  <div class="modal-content">
    <span onclick="closeModal('followingModal')" class="close">&times;</span>
    <h3>Following</h3>
    <ul style="list-style: none; padding: 0;">
      <% user.following?.forEach(followed => { %>
        <li style="display: flex; align-items: center; margin-bottom: 10px;">
          <img src="/uploads/<%= followed.profilePic || '/images/default-avatar.jpg' %>" alt="avatar"
               style="width: 30px; height: 30px; border-radius: 50%; margin-right: 10px;">
          <a href="/show-user/<%= followed._id %>" style="text-decoration: none; color: #333;">
            <%= followed.username %>
          </a>
        </li>
      <% }) %>
    </ul>
  </div>
</div>

<script>

  function openModal(type) {
  if (type === 'followers') {
    document.getElementById('followersModal').style.display = 'flex';
  } else if (type === 'following') {
    document.getElementById('followingModal').style.display = 'flex';
  }
}

  function closeModal(id) {
    document.getElementById(id).style.display = 'none';
  }

  async function toggleFollow(userId) {
    try {
      const res = await fetch(`/follow/${userId}`, {
        method: 'POST',
        headers: { 'Content-Type': 'application/json' }
      });

      const data = await res.json();

      if (data.success) {
        const btn = document.getElementById('followBtn');
        const followersCountEl = document.querySelector('.followers-count');

        // Toggle button text
        btn.textContent = data.isFollowing ? 'Unfollow' : 'Follow';

        // Update followers count if available
        if (followersCountEl) {
          followersCountEl.textContent = data.followersCount;
        }
      }
    } catch (err) {
      console.error('Follow toggle failed:', err);
    }
  }

  document.querySelectorAll('li').forEach(function(item) {
    item.addEventListener('mouseover', function() {
      const profilePreview = item.querySelector('.profile-preview');
      if (profilePreview) {
        profilePreview.style.display = 'block';
      }
    });
    item.addEventListener('mouseout', function() {
      const profilePreview = item.querySelector('.profile-preview');
      if (profilePreview) {
        profilePreview.style.display = 'none';
      }
    });
  });
</script>

</body>
</html>
